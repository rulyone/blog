spring.application.name=blog
# server.address=${SERVER_ADDRESS:127.0.0.1}
# managed by caddy
server.ssl.enabled=false
# so that baseUrl returns https instead of http while using the reverse proxy caddy
server.forward-headers-strategy=native

spring.security.oauth2.client.registration.github.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT-ID}
spring.security.oauth2.client.registration.github.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT-SECRET}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

spring.security.oauth2.client.registration.microsoft.provider=microsoft
spring.security.oauth2.client.registration.microsoft.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_CLIENT-ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MICROSOFT_CLIENT-SECRET}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.microsoft.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.microsoft.client-name=Microsoft
spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/consumers/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.microsoft.jwk-set-uri=https://login.microsoftonline.com/consumers/discovery/v2.0/keys
spring.security.oauth2.client.provider.microsoft.user-name-attribute=sub

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:blogdb;DB_CLOSE_DELAY=-1}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER-CLASS-NAME:org.h2.Driver}
spring.jpa.database-platform=${SPRING_JPA_DATABASE-PLATFORM:org.hibernate.dialect.H2Dialect}
# for localhost debugging and development
#logging.level.org.springframework.security=DEBUG
#spring.h2.console.enabled=true
#spring.jpa.show-sql=true
#logging.level.org.springframework.security.web.authentication=DEBUG
#logging.level.org.springframework.security.oauth2=DEBUG
#logging.level.org.springframework.security.oidc=DEBUG
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.security.web.savedrequest=DEBUG
#logging.level.org.springframework.security.web.FilterChainProxy=DEBUG

# for debugging thymeleaf
spring.thymeleaf.cache=${SPRING_THYMELEAF_CACHE:true}
spring.thymeleaf.prefix=${SPRING_THYMELEAF_PREFIX:file:/app/src/main/resources/templates/}
spring.web.resources.static-locations=${SPRING_WEB_RESOURCES_STATIC_LOCATIONS:file:/app/src/main/resources/static/}
spring.web.resources.cache.period=${SPRING_WEB_RESOURCES_CACHE_PERIOD:0}
spring.devtools.restart.enabled=${SPRING_DEVTOOLS_RESTART_ENABLED:false}

spring.jpa.hibernate.ddl-auto=none
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# upload images
blog.upload-dir=${BLOG_UPLOAD-DIR:~/uploads/}
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=1MB

umami.enabled=${UMAMI_ENABLED:false}
umami.script-url=${UMAMI_SCRIPT-URL:https://localhost:3000/script.js}
umami.website-id=${UMAMI_WEBSITE-ID:your-website-id-from-umami-dashboard-after-creation}

spring.mail.host=${SPRINT_MAIL_HOST:somehost}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:someuser@example.com}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}